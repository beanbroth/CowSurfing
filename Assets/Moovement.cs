//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Moovement.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Moovement : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Moovement()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Moovement"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""b1f701ab-18a1-452e-828e-cedfae168fc8"",
            ""actions"": [
                {
                    ""name"": ""1"",
                    ""type"": ""Button"",
                    ""id"": ""860e1e94-e02a-445f-89a3-9a4def95700e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2"",
                    ""type"": ""Button"",
                    ""id"": ""9d49aff8-458a-4912-bcfc-0cd417842c2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Button"",
                    ""id"": ""8bc54f82-7220-4488-92d4-58c601387a26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Button"",
                    ""id"": ""9325491d-154e-4ba4-a5a4-17b38b358383"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""5"",
                    ""type"": ""Button"",
                    ""id"": ""01de8a94-350c-4f8e-b9d4-0b2ff2e69d1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""6"",
                    ""type"": ""Button"",
                    ""id"": ""799501dc-cee8-40c5-aff7-f469c505da77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b02c72eb-29a8-46cc-b83e-952ee9aa8da8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09edb57a-8c8a-4c3f-967d-f8e5e305d524"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ded83df-94c9-41ce-b313-e28dae3b6ca2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b672dc9-2c35-45fd-8142-84fd95a52307"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2567bd7c-4e9b-4f8c-a951-e2da8f4b2609"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bad018b0-0ed2-4466-bb72-a92ca3f32a37"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls__1 = m_PlayerControls.FindAction("1", throwIfNotFound: true);
        m_PlayerControls__2 = m_PlayerControls.FindAction("2", throwIfNotFound: true);
        m_PlayerControls__3 = m_PlayerControls.FindAction("3", throwIfNotFound: true);
        m_PlayerControls__4 = m_PlayerControls.FindAction("4", throwIfNotFound: true);
        m_PlayerControls__5 = m_PlayerControls.FindAction("5", throwIfNotFound: true);
        m_PlayerControls__6 = m_PlayerControls.FindAction("6", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private IPlayerControlsActions m_PlayerControlsActionsCallbackInterface;
    private readonly InputAction m_PlayerControls__1;
    private readonly InputAction m_PlayerControls__2;
    private readonly InputAction m_PlayerControls__3;
    private readonly InputAction m_PlayerControls__4;
    private readonly InputAction m_PlayerControls__5;
    private readonly InputAction m_PlayerControls__6;
    public struct PlayerControlsActions
    {
        private @Moovement m_Wrapper;
        public PlayerControlsActions(@Moovement wrapper) { m_Wrapper = wrapper; }
        public InputAction @_1 => m_Wrapper.m_PlayerControls__1;
        public InputAction @_2 => m_Wrapper.m_PlayerControls__2;
        public InputAction @_3 => m_Wrapper.m_PlayerControls__3;
        public InputAction @_4 => m_Wrapper.m_PlayerControls__4;
        public InputAction @_5 => m_Wrapper.m_PlayerControls__5;
        public InputAction @_6 => m_Wrapper.m_PlayerControls__6;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterface != null)
            {
                @_1.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_1;
                @_1.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_1;
                @_1.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_1;
                @_2.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_2;
                @_2.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_2;
                @_2.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_2;
                @_3.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_3;
                @_3.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_3;
                @_3.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_3;
                @_4.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_4;
                @_4.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_4;
                @_4.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_4;
                @_5.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_5;
                @_5.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_5;
                @_5.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_5;
                @_6.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_6;
                @_6.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_6;
                @_6.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.On_6;
            }
            m_Wrapper.m_PlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @_1.started += instance.On_1;
                @_1.performed += instance.On_1;
                @_1.canceled += instance.On_1;
                @_2.started += instance.On_2;
                @_2.performed += instance.On_2;
                @_2.canceled += instance.On_2;
                @_3.started += instance.On_3;
                @_3.performed += instance.On_3;
                @_3.canceled += instance.On_3;
                @_4.started += instance.On_4;
                @_4.performed += instance.On_4;
                @_4.canceled += instance.On_4;
                @_5.started += instance.On_5;
                @_5.performed += instance.On_5;
                @_5.canceled += instance.On_5;
                @_6.started += instance.On_6;
                @_6.performed += instance.On_6;
                @_6.canceled += instance.On_6;
            }
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    public interface IPlayerControlsActions
    {
        void On_1(InputAction.CallbackContext context);
        void On_2(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void On_5(InputAction.CallbackContext context);
        void On_6(InputAction.CallbackContext context);
    }
}
